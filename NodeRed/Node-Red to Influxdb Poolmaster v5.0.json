[
    {
        "id": "d91838d0.672e38",
        "type": "tab",
        "label": "Poolmaster v5.0 Influx Flow",
        "disabled": false,
        "info": ""
    },
    {
        "id": "81667e0b.b603b",
        "type": "mqtt in",
        "z": "d91838d0.672e38",
        "name": "Meas1 JSON from Poolmaster",
        "topic": "Home/Pool/Meas1",
        "qos": "1",
        "datatype": "json",
        "broker": "30654e7b.139f62",
        "x": 320,
        "y": 160,
        "wires": [
            [
                "11e99708.5a0839"
            ]
        ]
    },
    {
        "id": "11e99708.5a0839",
        "type": "function",
        "z": "d91838d0.672e38",
        "name": "Decode MySensor Message",
        "func": "if(typeof msg.payload.IO !== 'undefined')\n{\n    var mask = msg.payload.IO;\n    var mask2 = msg.payload.IO2;\n    \n    msg.payload.FiltState = (mask >> 7) & 1;\n    msg.payload.pHPumpState = (mask >> 6) & 1;\n    msg.payload.ChlPumpState = (mask >> 5) & 1;\n    msg.payload.pHLevel = (mask >> 4) & 1;\n    msg.payload.ChlLevel = (mask >> 3) & 1;\n    msg.payload.PSIError = (mask >> 2) & 1;\n    msg.payload.pHPumpUpTimeErr = (mask >> 1) & 1;\n    msg.payload.ChlPumpUpTimeErr = (mask >> 0) & 1;\n    \n    msg.payload.pHPIDMode = (mask2 >> 7) & 1;\n    msg.payload.ChlPIDMode = (mask2 >> 6) & 1;\n    msg.payload.AutoMode = (mask2 >> 5) & 1;\n    msg.payload.WaterHeat = (mask2 >> 4) & 1;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 860,
        "y": 260,
        "wires": [
            [
                "f7ec2835.38ff48"
            ]
        ]
    },
    {
        "id": "f7ec2835.38ff48",
        "type": "influxdb out",
        "z": "d91838d0.672e38",
        "influxdb": "5682d297.1cc1ec",
        "name": "Influx Pool",
        "measurement": "PoolMaster",
        "precision": "",
        "retentionPolicy": "",
        "x": 1200,
        "y": 260,
        "wires": []
    },
    {
        "id": "1732dafd.a26b35",
        "type": "mqtt in",
        "z": "d91838d0.672e38",
        "name": "Meas2 JSON from Pool",
        "topic": "Home/Pool/Meas2",
        "qos": "1",
        "datatype": "json",
        "broker": "30654e7b.139f62",
        "x": 320,
        "y": 220,
        "wires": [
            [
                "11e99708.5a0839"
            ]
        ]
    },
    {
        "id": "c3b2e2b.34ca12",
        "type": "mqtt in",
        "z": "d91838d0.672e38",
        "name": "Set1 JSON from Pool",
        "topic": "Home/Pool/Set1",
        "qos": "1",
        "datatype": "json",
        "broker": "30654e7b.139f62",
        "x": 310,
        "y": 280,
        "wires": [
            [
                "11e99708.5a0839"
            ]
        ]
    },
    {
        "id": "83eb7d0d.dc14a",
        "type": "mqtt in",
        "z": "d91838d0.672e38",
        "name": "Set2 JSON from Pool",
        "topic": "Home/Pool/Set2",
        "qos": "1",
        "datatype": "json",
        "broker": "30654e7b.139f62",
        "x": 310,
        "y": 340,
        "wires": [
            [
                "11e99708.5a0839"
            ]
        ]
    },
    {
        "id": "30654e7b.139f62",
        "type": "mqtt-broker",
        "z": "",
        "name": "Local Broker",
        "broker": "192.168.1.35",
        "port": "1883",
        "clientid": "CharNodeRed",
        "usetls": false,
        "compatmode": true,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "Home/NodeRed",
        "birthQos": "1",
        "birthRetain": "true",
        "birthPayload": "online",
        "closeTopic": "",
        "closePayload": "",
        "willTopic": "Home/NodeRed",
        "willQos": "0",
        "willRetain": "true",
        "willPayload": "offline"
    },
    {
        "id": "5682d297.1cc1ec",
        "type": "influxdb",
        "z": "",
        "hostname": "192.168.1.35",
        "port": "8086",
        "protocol": "http",
        "database": "Pool",
        "name": "Pool",
        "usetls": false,
        "tls": ""
    }
]